name: render all levels

concurrency:
  group: render_all

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        folder:
        - "000tests"
        - "00_GATE"
        - "demos"
        - "EditorSamples"
        - "templates"
        - "testFolder"
        - "World/CC"
        - "World/DS"
        - "World/DU"
        - "World/GW"
        - "World/HI"
        - "World/LF"
        - "World/Multi"
        - "World/SB"
        - "World/SH"
        - "World/SI"
        - "World/SL"
        - "World/SS"
        - "World/SU"
        - "World/UW"

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true
    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Run transpiler
      run: dotnet run --project Drizzle.Transpiler/Drizzle.Transpiler.csproj -- LingoSource Drizzle.Ported/Translated
    - name: Build
      run: dotnet build --no-restore -c Release
    - name: Render levels
      shell: pwsh
      run: |
        $env:COMPlus_gcServer=1
        $blackList = @{
          "EditorSamples" = @{"SS_AI"=1}
        }
        $folder = "${{ matrix.folder }}"
        $path = join-path "Data/LevelEditorProjects" $folder "*.txt"
        $files = (get-childitem -Recurse $path) | where-object { $blackList[$folder] -eq $null -or $blackList[$folder][[System.IO.Path]::GetFileNameWithoutExtension($_)] -ne 1 }
        dotnet run --no-build -c Release --project Drizzle.ConsoleApp/Drizzle.ConsoleApp.csproj -- render --parallelism 2 $files
